use crate::arch::board::LD_STACK_PTR;
use crate::arch::vector::{Vector, VectorTable};
use crate::{const_vec, fault, irq_default, main, vector};

pub use crate::arch::cpu::cortex_m4::*;
use crate::arch::register::{BitsWithOffset, HalfWord, Register, Word};

pub const ISR_TABLE_SIZ: usize = 109;

// st32f4xx Registers

pub const RCC_ADDR: *const usize = 0x40023800 as _;

pub(crate) const RCC_AHB1ENR: *const Register<Word> = 0x4002_3830 as *const Register<Word>;
pub(crate) const GPIOB_MODER: *const Register<Word> = 0x4002_0400 as *const Register<Word>;
pub(crate) const GPIOB_ODR: *const Register<HalfWord> = 0x4002_0414 as *const Register<HalfWord>;
pub(crate) const GPIOC_IDR: *const Register<Word> = 0x4002_0810 as *const Register<Word>;

pub(crate) const GPIOB: BitsWithOffset<0, 1, 2, u8> = BitsWithOffset::new();
pub(crate) const GPIOC: BitsWithOffset<0, 2, 3, u8> = BitsWithOffset::new();
pub(crate) const GPIO_MODER_PORT_7: BitsWithOffset<0, 14, 16, u8> = BitsWithOffset::new();
pub(crate) const GPIO_ODR_PORT_7: BitsWithOffset<0, 7, 8, u8> = BitsWithOffset::new();
pub(crate) const GPIO_IDR_PORT_13: BitsWithOffset<0, 13, 14, u8> = BitsWithOffset::new();

#[derive(Clone, Copy)]
pub enum IsrKind {
    Undef,
    Stp,
    Reset,
    Nmi,
    HardFault,
    BusFault,
    MmuFault,
    UsageFault,
    Svc,
    PendSV,
    Systick,
    Wwdg,
    Pvd,
    TampStamp,
    RtcWkup,
    Flash,
    Rcc,
    Exti0,
    Exti1,
    Exti2,
    Exti3,
    Exti4,
    Dma1Stream0,
    Dma1Stream1,
    Dma1Stream2,
    Dma1Stream3,
    Dma1Stream4,
    Dma1Stream5,
    Dma1Stream6,
    Adc,
    Can1Tx,
    Can1Rx0,
    Can1Rx1,
    Can1Sce,
    Exti9_5,
    Tim1BrkTim9,
    Tim1BrkTim10,
    Tim1TrgComTim11,
    Tim1Cc,
    Tim2,
    Tim3,
    Tim4,
    I2c1Ev,
    I2c1Er,
    I2c2Ev,
    I2c2Er,
    Spi1,
    Spi2,
    Usart1,
    Usart2,
    Usart3,
    Exti15_10,
    RtcAlarm,
    OtgFsWkup,
    Tim8BrkTim12,
    Tim8UpTim13,
    Tim8TrgComTim14,
    Tim8Cc,
    Dma1Stream7,
    Fsmc,
    Sdio,
    Tim5,
    Spi3,
    Uart4,
    Uart5,
    Tim6Dac,
    Tim7,
    Dma2Stream0,
    Dma2Stream1,
    Dma2Stream2,
    Dma2Stream3,
    Dma2Stream4,
    Eth,
    EthWkup,
    Can2Tx,
    Can2Rx0,
    Can2Rx1,
    Can2Sce,
    OtgFs,
    Dma2Stream5,
    Dma2Stream6,
    Dma2Stream7,
    Usart6,
    I2c3Ev,
    I2c3Er,
    OtgHsEp1Out,
    OtgHsEp1In,
    OtgHsWkup,
    OtgHs,
    Dcmi,
    Cryp,
    HashRng,
    FPU,
    Uart7,
    Uart8,
    Spi4,
    Spi5,
    Spi6,
    Sat1,
    LcdTft1,
    LcdTft2,
    Dma2d,
}

// Original Vector Table
pub static ISR_TABLE: VectorTable<Vector, ISR_TABLE_SIZ> = const_vec!(
    ISR_TABLE_SIZ,
    vector!(null),
    vector!(IsrKind::Stp, extern LD_STACK_PTR),
    // Thumb-mode, least-significant bit will be set
    vector!(IsrKind::Reset, fn main),
    vector!(IsrKind::Nmi, fn irq_default),
    vector!(IsrKind::HardFault, fn fault),
    vector!(IsrKind::MmuFault, fn fault),
    vector!(IsrKind::BusFault, fn fault),
    vector!(IsrKind::UsageFault, fn fault),
    vector!(null),
    vector!(null),
    vector!(null),
    vector!(null),
    vector!(IsrKind::Svc, fn irq_default),
    vector!(null),
    vector!(null),
    vector!(IsrKind::PendSV, fn irq_default),
    vector!(IsrKind::Systick, fn irq_default),
    // https://www.st.com/resource/en/reference_manual/rm0090-stm32f405415-stm32f407417-stm32f427437-and-stm32f429439-advanced-armbased-32bit-mcus-stmicroelectronics.pdf
    vector!(IsrKind::Wwdg, fn irq_default),
    vector!(IsrKind::Pvd, fn irq_default),
    vector!(IsrKind::TampStamp, fn irq_default),
    vector!(IsrKind::RtcWkup, fn irq_default),
    vector!(IsrKind::Flash, fn irq_default),
    vector!(IsrKind::Rcc, fn irq_default),
    vector!(IsrKind::Exti0, fn irq_default),
    vector!(IsrKind::Exti1, fn irq_default),
    vector!(IsrKind::Exti2, fn irq_default),
    vector!(IsrKind::Exti3, fn irq_default),
    vector!(IsrKind::Exti4, fn irq_default),
    vector!(IsrKind::Dma1Stream0, fn irq_default),
    vector!(IsrKind::Dma1Stream1, fn irq_default),
    vector!(IsrKind::Dma1Stream2, fn irq_default),
    vector!(IsrKind::Dma1Stream3, fn irq_default),
    vector!(IsrKind::Dma1Stream4, fn irq_default),
    vector!(IsrKind::Dma1Stream5, fn irq_default),
    vector!(IsrKind::Dma1Stream6, fn irq_default),
    vector!(IsrKind::Adc, fn irq_default),
    vector!(IsrKind::Can1Tx, fn irq_default),
    vector!(IsrKind::Can1Rx0, fn irq_default),
    vector!(IsrKind::Can1Rx1, fn irq_default),
    vector!(IsrKind::Can1Sce, fn irq_default),
    vector!(IsrKind::Exti9_5, fn irq_default),
    vector!(IsrKind::Tim1BrkTim9, fn irq_default),
    vector!(IsrKind::Tim1BrkTim10, fn irq_default),
    vector!(IsrKind::Tim1TrgComTim11, fn irq_default),
    vector!(IsrKind::Tim1Cc, fn irq_default),
    vector!(IsrKind::Tim2, fn irq_default),
    vector!(IsrKind::Tim3, fn irq_default),
    vector!(IsrKind::Tim4, fn irq_default),
    vector!(IsrKind::I2c1Ev, fn irq_default),
    vector!(IsrKind::I2c1Er, fn irq_default),
    vector!(IsrKind::I2c2Ev, fn irq_default),
    vector!(IsrKind::I2c2Er, fn irq_default),
    vector!(IsrKind::Spi1, fn irq_default),
    vector!(IsrKind::Spi2, fn irq_default),
    vector!(IsrKind::Usart1, fn irq_default),
    vector!(IsrKind::Usart2, fn irq_default),
    vector!(IsrKind::Usart3, fn irq_default),
    vector!(IsrKind::Exti15_10, fn irq_default),
    vector!(IsrKind::RtcAlarm, fn irq_default),
    vector!(IsrKind::OtgFsWkup, fn irq_default),
    vector!(IsrKind::Tim8BrkTim12, fn irq_default),
    vector!(IsrKind::Tim8UpTim13, fn irq_default),
    vector!(IsrKind::Tim8TrgComTim14, fn irq_default),
    vector!(IsrKind::Tim8Cc, fn irq_default),
    vector!(IsrKind::Dma1Stream7, fn irq_default),
    vector!(IsrKind::Fsmc, fn irq_default),
    vector!(IsrKind::Sdio, fn irq_default),
    vector!(IsrKind::Tim5, fn irq_default),
    vector!(IsrKind::Spi3, fn irq_default),
    vector!(IsrKind::Uart4, fn irq_default),
    vector!(IsrKind::Uart5, fn irq_default),
    vector!(IsrKind::Tim6Dac, fn irq_default),
    vector!(IsrKind::Tim7, fn irq_default),
    vector!(IsrKind::Dma2Stream0, fn irq_default),
    vector!(IsrKind::Dma2Stream1, fn irq_default),
    vector!(IsrKind::Dma2Stream2, fn irq_default),
    vector!(IsrKind::Dma2Stream3, fn irq_default),
    vector!(IsrKind::Dma2Stream4, fn irq_default),
    vector!(IsrKind::Eth, fn irq_default),
    vector!(IsrKind::EthWkup, fn irq_default),
    vector!(IsrKind::Can2Tx, fn irq_default),
    vector!(IsrKind::Can2Rx0, fn irq_default),
    vector!(IsrKind::Can2Rx1, fn irq_default),
    vector!(IsrKind::Can2Sce, fn irq_default),
    vector!(IsrKind::OtgFs, fn irq_default),
    vector!(IsrKind::Dma2Stream5, fn irq_default),
    vector!(IsrKind::Dma2Stream6, fn irq_default),
    vector!(IsrKind::Dma2Stream7, fn irq_default),
    vector!(IsrKind::Usart6, fn irq_default),
    vector!(IsrKind::I2c3Ev, fn irq_default),
    vector!(IsrKind::I2c3Er, fn irq_default),
    vector!(IsrKind::OtgHsEp1Out, fn irq_default),
    vector!(IsrKind::OtgHsEp1In, fn irq_default),
    vector!(IsrKind::OtgHsWkup, fn irq_default),
    vector!(IsrKind::OtgHs, fn irq_default),
    vector!(IsrKind::Dcmi, fn irq_default),
    vector!(IsrKind::Cryp, fn irq_default),
    vector!(IsrKind::HashRng, fn irq_default),
    vector!(IsrKind::FPU, fn irq_default),
    vector!(IsrKind::Uart7, fn irq_default),
    vector!(IsrKind::Uart8, fn irq_default),
    vector!(IsrKind::Spi4, fn irq_default),
    vector!(IsrKind::Spi5, fn irq_default),
    vector!(IsrKind::Spi6, fn irq_default),
    vector!(IsrKind::Sat1, fn irq_default),
    vector!(IsrKind::LcdTft1, fn irq_default),
    vector!(IsrKind::LcdTft2, fn irq_default),
    vector!(IsrKind::Dma2d, fn irq_default)
);
